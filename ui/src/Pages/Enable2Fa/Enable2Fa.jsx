import React, { useState, useEffect } from "react";
import { useNavigate } from "react-router-dom";
import "./Enable2Fa.css";
import Request from "../../../Utils/Request";
import UserProfile from "../../../Utils/UserProfile";
import toast, { Toaster } from "react-hot-toast";

const Enable2FA = () => {
  const [qrCode, setQrCode] = useState("");
  const [verificationCode, setVerificationCode] = useState("");
  const [Error, setError] = useState(null);
  const navigate = useNavigate();
  const currentUser = UserProfile.GetUserData();

  // Fetch QR code when the component is mounted (assuming it's passed via an API or set dynamically)
  useEffect(() => {
    getenable2Fa();
  }, []);

  const getenable2Fa = async () => {
    const token = UserProfile.GetUserData().access_token;
    await Request.get("/user/enable_2fa", {
      headers: {
        Authorization: `Bearer ${token}`,
      },
    }).then((res) => {
      if (res.data.detail == "Genereated Successfully") {
        setQrCode(res.data.qr_code);
      }
    });
  };

  const handleVerificationSubmit = async (event) => {
    event.preventDefault();
    setError(null);
    const token = UserProfile.GetUserData().access_token;
    await Request.post(
      "/user/enable_2fa",
      new URLSearchParams({ verification_code: verificationCode }),
      {
        headers: {
          Authorization: `Bearer ${token}`,
        },
      }
    )
      .then((res) => {
        toast.success("2FA has been Enabled Successfully");
        const updateRecord = {
          is_2fa_enabled: true,
        };
        UserProfile.UpdateUserData(updateRecord);
        setTimeout(() => {
          navigate("/loading");
        }, 1000);
      })
      .catch((error) => {
        setError(
          error.response?.data?.detail ||
            "Error Setting Up 2FA. Please try again."
        );
      });
  };

  return (
    <div className="container">
      <div className="auth-box">
        <h2>Enable Two-Factor Authentication</h2>

        <div className="qr-section">
          <p>
            1. Scan this QR code with your authentication app (Google
            Authenticator, Authy, etc.)
          </p>
          <div className="qr-container">
            <img
              src={`data:image/png;base64,${qrCode}`}
              alt="QR Code for 2FA"
            />
          </div>
        </div>

        <div className="verification-section">
          <p>2. Enter the 6-digit code generated by your app</p>
          <form onSubmit={handleVerificationSubmit}>
            <div className="form-group">
              <input
                type="text"
                className="otp"
                name="verification_code"
                placeholder="000000"
                pattern="[0-9]{6}"
                maxLength="6"
                required
                value={verificationCode}
                onChange={(e) => setVerificationCode(e.target.value)}
              />
            </div>
            <button type="submit" className="btn btn-primary">
              Verify and Enable
            </button>
          </form>
          {Error && <p className="error-message">{Error}</p>}
        </div>

        <div className="info-section">
          <p>
            <strong>Important Note:</strong> Keep your authentication app safe.
            You'll need it every time you log in.
          </p>
        </div>
      </div>
    </div>
  );
};

export default Enable2FA;
